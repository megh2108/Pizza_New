{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\POOJA\\\\pizza_final2\\\\Pizza_New\\\\client\\\\src\\\\Components\\\\Cart\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Cart.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { toast } from 'react-toastify'; // Import toast\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [toppings, setToppings] = useState([]); // State to store fetched toppings\n  const [userData, setUserData] = useState([]);\n  const [quantity, setQuantity] = useState();\n  console.log(\"hi\", cartItems);\n  const decrementQuantity = () => {\n    if (quantity > 1) {\n      setQuantity(quantity - 1);\n    }\n  };\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1);\n  };\n  const callGetCart = async () => {\n    try {\n      const response = await fetch('/getcart', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const res = await response.json();\n      console.log(res);\n      if (!response.ok) {\n        const error = new Error(res.error);\n        throw error;\n      }\n      setCartItems(res.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    callGetCart();\n  }, []);\n  const fetchToppings = async () => {\n    try {\n      const response = await fetch('/gettoppings'); // Change the URL to match your API route\n      const data = await response.json();\n      setToppings(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    callGetCart();\n    fetchToppings(); // Fetch toppings when the component mounts\n  }, []);\n  const callMenuPage = async () => {\n    try {\n      const response = await fetch(\"/getpizza\", {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const res = await response.json();\n      console.log(res);\n      setUserData(res);\n      if (!response.ok) {\n        const error = new Error(res.error);\n        throw error;\n      }\n    } catch (err) {\n      console.log(err);\n      //   navigate(\"/login\");\n    }\n  };\n\n  useEffect(() => {\n    callMenuPage();\n  }, []);\n  const placeOrder = async () => {\n    const stripe = await loadStripe(\"pk_test_51NxuORSJjSNbQ9depnPh6Xjoaa9mKEKutlw3t2yWEZiT2DuCeJ3enVXqmaHNlg6kpXh0bbNFOgbw2232Mj2l0Rf200r3oVFkcD\");\n    const body = {\n      products: cartItems\n    };\n    const answer = await fetch('/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const session = await answer.json();\n    const result = stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n    if (result) {\n      try {\n        const response = await fetch('/order', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.error || 'Failed to place the order');\n        }\n        console.log('Order placed successfully:', data.message);\n        toast.success('Order placed successfully');\n      } catch (error) {\n        console.error('Error placing order:', error.message);\n        toast.error('Order not placed successfully');\n      }\n    } else {\n      console.log(result.error);\n      toast.error(result.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"section\",\n      id: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Your cart is empty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n        // ... Your existing code for rendering cart items ...\n        _jsxDEV(\"div\", {\n          children: [cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-9\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row g-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"assets/img/italianpizza.jpg\",\n                    class: \"img-fluid rounded-start\",\n                    alt: \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-8\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        class: \"card-title col-lg-8\",\n                        children: item.itemName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        class: \"btn btn-primary col-lg-4\",\n                        style: {\n                          \"height\": \"40px\",\n                          \"width\": \"100px\",\n                          \"margin-top\": \"5px\",\n                          \"margin-left\": \"auto\"\n                        },\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-lg-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"inputState\",\n                          class: \"form-label\",\n                          children: \"Size\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          id: \"inputState\",\n                          class: \"form-select\",\n                          children: /*#__PURE__*/_jsxDEV(\"option\", {\n                            children: item.size\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-lg-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"yourSecretKey\",\n                          className: \"form-label\",\n                          children: \"Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                          class: \"card-text\",\n                          children: item.price\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-lg-3 mt-4\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"btn-group\",\n                          role: \"group\",\n                          \"aria-label\": \"Basic outlined example\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            class: \"btn btn-outline-primary\",\n                            onClick: decrementQuantity,\n                            children: \"-\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            name: \"quantity\",\n                            className: \"form-control\",\n                            id: \"yourQuantity\",\n                            value: item.quantity,\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            class: \"btn btn-outline-primary\",\n                            onClick: incrementQuantity,\n                            children: \"+\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"col-lg-2 \",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"yourSecretKey\",\n                          className: \"form-label\",\n                          children: \"Total Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                          class: \"card-text\",\n                          children: item.totalPrice\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        class: \"card-text\",\n                        children: \"Toppings\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"row\",\n                        children: toppings.map(topping => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-lg-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-check-label\",\n                            htmlFor: `topping-${topping._id}`,\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              className: \"form-check-input\",\n                              type: \"checkbox\",\n                              id: `topping-${topping._id}`,\n                              value: topping.toppingName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 260,\n                              columnNumber: 73\n                            }, this), topping.toppingName]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 69\n                          }, this)\n                        }, `topping-${topping._id}`, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 65\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-primary\",\n              onClick: placeOrder,\n              children: \"Placed Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Cart, \"Fb5AnyxI1F1916YHHMdHZGGBEOc=\");\n_c = Cart;\nexport default Cart;\n\n// import React, { useState, useEffect } from 'react'\n// import './Cart.css'\n\n// const Cart = () => {\n\n//     const [cartItems, setCartItems] = useState([]);\n//     const [toppings, setToppings] = useState([]); // State to store fetched toppings\n//     const [userData, setUserData] = useState([]);\n\n//     const [quantity, setQuantity] = useState();\n\n//     const decrementQuantity = () => {\n//         if (quantity > 1) {\n//             setQuantity(quantity - 1);\n//         }\n//     };\n\n//     const incrementQuantity = () => {\n//         setQuantity(quantity + 1);\n//     };\n\n//     const callGetCart = async () => {\n//         try {\n//             const response = await fetch('/getcart', {\n//                 method: 'GET',\n//                 headers: {\n//                     Accept: 'application/json',\n//                     'Content-Type': 'application/json',\n//                 },\n//                 credentials: 'include',\n//             });\n\n//             const res = await response.json();\n//             console.log(res);\n\n//             if (!response.ok) {\n//                 const error = new Error(res.error);\n//                 throw error;\n//             }\n\n//             setCartItems(res.items);\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     };\n\n//     useEffect(() => {\n//         callGetCart();\n//     }, []);\n\n//     const fetchToppings = async () => {\n//         try {\n//             const response = await fetch('/gettoppings'); // Change the URL to match your API route\n//             const data = await response.json();\n//             setToppings(data);\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     };\n\n//     useEffect(() => {\n//         callGetCart();\n//         fetchToppings(); // Fetch toppings when the component mounts\n//     }, []);\n\n//     const callMenuPage = async () => {\n//         try {\n//             const response = await fetch(\"/getpizza\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     Accept: \"application/json\",\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 credentials: \"include\"\n//             });\n\n//             const res = await response.json();\n//             console.log(res);\n//             setUserData(res);\n\n//             if (!response.ok) {\n//                 const error = new Error(res.error);\n//                 throw error;\n//             }\n//         } catch (err) {\n//             console.log(err);\n//             //   navigate(\"/login\");\n//         }\n//     }\n\n//     useEffect(() => {\n//         callMenuPage();\n//     }, []);\n\n//     const placeOrder = async () => {\n//         try {\n//             const response = await fetch('/order', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Accept': 'application/json',\n//                     'Content-Type': 'application/json',\n//                 },\n//                 credentials: 'include',\n//             });\n\n//             const data = await response.json();\n\n//             if (!response.ok) {\n//                 throw new Error(data.error || 'Failed to place the order');\n//             }\n\n//             console.log('Order placed successfully:', data.message);\n//             window.alert('Order placed successfully');\n\n//         } catch (error) {\n//             console.error('Error placing order:', error.message);\n//             window.alert('Order not placed successfully');\n\n//         }\n//     };\n\n//     return (\n//         <>\n\n//             <section class=\"section\" id=\"cart\">\n//                 <div className=\"section-header\">\n//                     <p>Your Cart</p>\n//                 </div>\n//                 <div class=\"container\">\n//                     {cartItems.length === 0 ? (\n//                         <div className=\"text-center\">\n//                             {/* <p>Your cart is empty.</p> */}\n//                             <p><span>Your cart is empty.</span></p>\n//                         </div>\n//                     ) : (\n//                         // ... Your existing code for rendering cart items ...\n//                         <div>\n\n//                             {\n//                                 cartItems.map((item) => (\n\n//                                     <div class=\"col-lg-9\" key={item._id} >\n//                                         <div class=\"card mb-3\">\n//                                             <div class=\"row g-0\">\n//                                                 <div class=\"col-md-4\">\n//                                                     <img\n//                                                         src=\"assets/img/italianpizza.jpg\"\n//                                                         class=\"img-fluid rounded-start\"\n//                                                         alt=\"...\"\n//                                                     />\n//                                                 </div>\n//                                                 <div class=\"col-md-8\">\n//                                                     <div class=\"card-body\">\n//                                                         <div class=\"row\">\n//                                                             <h5 class=\"card-title col-lg-4\">{item.itemName}</h5>\n\n//                                                             <p class=\"card-text col-lg-8 mt-3\">{item.description}</p>\n//                                                         </div>\n//                                                         <div class=\"row mb-3\">\n//                                                             <div class=\"col-lg-4\">\n//                                                                 <label for=\"inputState\" class=\"form-label\">\n//                                                                     Size\n//                                                                 </label>\n\n//                                                                 <select id=\"inputState\" class=\"form-select\">\n//                                                                     <option>{item.size}</option>\n//                                                                 </select>\n//                                                             </div>\n//                                                             <div class=\"col-lg-2\">\n//                                                                 <label for=\"yourSecretKey\" className=\"form-label\">\n//                                                                     Price\n//                                                                 </label>\n//                                                                 <h5 class=\"card-text\">{item.price}</h5>\n//                                                             </div>\n//                                                             <div class=\"col-lg-3 mt-4\">\n//                                                                 <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n//                                                                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={decrementQuantity}>-</button>\n//                                                                     {/* <input type=\"password\" name=\"password\" className=\"form-control\" id=\"yourPassword\" placeholder={item.quantity} required /> */}\n//                                                                     <input\n//                                                                         type=\"text\"\n//                                                                         name=\"quantity\"\n//                                                                         className=\"form-control\"\n//                                                                         id=\"yourQuantity\"\n//                                                                         value={item.quantity}\n//                                                                         readOnly\n//                                                                     />\n//                                                                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={incrementQuantity}>+</button>\n//                                                                 </div>\n//                                                             </div>\n//                                                             <div class=\"col-lg-2 \">\n\n//                                                                 <label for=\"yourSecretKey\" className=\"form-label\">Total Price</label>\n//                                                                 {/* <input type=\"text\" name=\"secretkey\" className=\"form-control\" id=\"yourSecretKey\" required /> */}\n//                                                                 <h5 class=\"card-text\">{item.totalPrice}</h5>\n//                                                             </div>\n//                                                         </div>\n//                                                         <div class=\"form-check\">\n//                                                             <h5 class=\"card-text\">Toppings</h5>\n//                                                             {/* Render toppings checkboxes here */}\n//                                                             <div class=\"row\">\n//                                                                 {/* <div class=\"col-lg-2\">\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\n//                                                             Cheese\n//                                                         </label>\n//                                                     </div>\n//                                                     <div class=\"col-lg-2\">\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\n//                                                             Butter\n//                                                         </label>\n//                                                     </div>\n//                                                     <div class=\"col-lg-2\">\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\n//                                                             Extra Butter\n//                                                         </label>\n//                                                     </div> */}\n//                                                                 {toppings.map((topping) => (\n//                                                                     <div className=\"col-lg-2\" key={topping._id}>\n//                                                                         <label className=\"form-check-label\" htmlFor={`topping-${topping._id}`}>\n//                                                                             <input\n//                                                                                 className=\"form-check-input\"\n//                                                                                 type=\"checkbox\"\n//                                                                                 id={`topping-${topping._id}`}\n//                                                                                 value={topping.toppingName}\n//                                                                             />\n//                                                                             {topping.toppingName}\n//                                                                         </label>\n//                                                                     </div>\n//                                                                 ))}\n//                                                             </div>\n//                                                         </div>\n//                                                     </div>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 ))\n//                             }\n//                             <div>\n//                                 {/* <a class=\"btn btn-primary\" >Placed Order</a> */}\n//                                 <a class=\"btn btn-primary\" onClick={placeOrder}>Placed Order</a>\n//                             </div>\n//                         </div>\n\n//                     )}\n\n//                 </div>\n//             </section>\n//         </>\n//     )\n// }\n\n// export default Cart\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","cartItems","setCartItems","toppings","setToppings","userData","setUserData","quantity","setQuantity","console","log","decrementQuantity","incrementQuantity","callGetCart","response","fetch","method","headers","Accept","credentials","res","json","ok","error","Error","items","err","fetchToppings","data","callMenuPage","placeOrder","stripe","body","products","answer","JSON","stringify","session","result","redirectToCheckout","sessionId","id","message","success","children","class","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","src","alt","itemName","style","for","size","price","role","type","onClick","name","value","readOnly","totalPrice","topping","htmlFor","_id","toppingName","_c","$RefreshReg$"],"sources":["C:/Users/POOJA/pizza_final2/Pizza_New/client/src/Components/Cart/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Cart.css'\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { toast } from 'react-toastify'; // Import toast\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst Cart = () => {\r\n\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [toppings, setToppings] = useState([]); // State to store fetched toppings\r\n    const [userData, setUserData] = useState([]);\r\n\r\n    const [quantity, setQuantity] = useState();\r\n    console.log(\"hi\", cartItems);\r\n\r\n    const decrementQuantity = () => {\r\n        if (quantity > 1) {\r\n            setQuantity(quantity - 1);\r\n        }\r\n    };\r\n\r\n    const incrementQuantity = () => {\r\n        setQuantity(quantity + 1);\r\n    };\r\n\r\n    const callGetCart = async () => {\r\n        try {\r\n            const response = await fetch('/getcart', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            });\r\n\r\n            const res = await response.json();\r\n            console.log(res);\r\n\r\n            if (!response.ok) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n\r\n            setCartItems(res.items);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        callGetCart();\r\n    }, []);\r\n\r\n    const fetchToppings = async () => {\r\n        try {\r\n            const response = await fetch('/gettoppings'); // Change the URL to match your API route\r\n            const data = await response.json();\r\n            setToppings(data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        callGetCart();\r\n        fetchToppings(); // Fetch toppings when the component mounts\r\n    }, []);\r\n\r\n    const callMenuPage = async () => {\r\n        try {\r\n            const response = await fetch(\"/getpizza\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const res = await response.json();\r\n            console.log(res);\r\n            setUserData(res);\r\n\r\n            if (!response.ok) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            //   navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callMenuPage();\r\n    }, []);\r\n\r\n    const placeOrder = async () => {\r\n\r\n        const stripe = await loadStripe(\"pk_test_51NxuORSJjSNbQ9depnPh6Xjoaa9mKEKutlw3t2yWEZiT2DuCeJ3enVXqmaHNlg6kpXh0bbNFOgbw2232Mj2l0Rf200r3oVFkcD\");\r\n\r\n        const body = {\r\n            products: cartItems\r\n        };\r\n\r\n        const answer = await fetch('/create-checkout-session', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(body),\r\n        });\r\n\r\n        const session = await answer.json();\r\n        const result = stripe.redirectToCheckout({\r\n            sessionId: session.id\r\n        });\r\n\r\n\r\n\r\n        if (result) {\r\n            try {\r\n                const response = await fetch('/order', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    credentials: 'include',\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(data.error || 'Failed to place the order');\r\n                }\r\n\r\n                console.log('Order placed successfully:', data.message);\r\n                toast.success('Order placed successfully');\r\n\r\n            } catch (error) {\r\n                console.error('Error placing order:', error.message);\r\n                toast.error('Order not placed successfully');\r\n\r\n            }\r\n        }\r\n        else {\r\n            console.log(result.error);\r\n            toast.error(result.error);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <section class=\"section\" id=\"cart\">\r\n                <div className=\"section-header\">\r\n                    <p>Your Cart</p>\r\n                </div>\r\n                <div class=\"container\">\r\n                    {cartItems.length === 0 ? (\r\n                        <div className=\"text-center\">\r\n                            {/* <p>Your cart is empty.</p> */}\r\n                            <p><span>Your cart is empty.</span></p>\r\n                        </div>\r\n                    ) : (\r\n                        // ... Your existing code for rendering cart items ...\r\n                        <div>\r\n\r\n                            {cartItems.map((item) => (\r\n\r\n                                <div class=\"col-lg-9\" key={item._id} >\r\n                                    <div class=\"card mb-3\">\r\n                                        <div class=\"row g-0\">\r\n                                            <div class=\"col-md-4\">\r\n                                                <img\r\n                                                    src=\"assets/img/italianpizza.jpg\"\r\n                                                    class=\"img-fluid rounded-start\"\r\n                                                    alt=\"...\"\r\n                                                />\r\n                                            </div>\r\n                                            <div class=\"col-md-8\">\r\n                                                <div class=\"card-body\">\r\n                                                    <div class=\"row\">\r\n                                                        <h5 class=\"card-title col-lg-8\">{item.itemName}</h5>\r\n\r\n                                                        {/* <p class=\"card-text col-lg-8 mt-3\">{item.description}</p> */}\r\n                                                        <button class=\"btn btn-primary col-lg-4\" style={{ \"height\": \"40px\", \"width\": \"100px\", \"margin-top\": \"5px\", \"margin-left\": \"auto\" }}>Remove</button>\r\n\r\n                                                    </div>\r\n                                                    <div class=\"row mb-3\">\r\n                                                        <div class=\"col-lg-4\">\r\n                                                            <label for=\"inputState\" class=\"form-label\">\r\n                                                                Size\r\n                                                            </label>\r\n\r\n                                                            <select id=\"inputState\" class=\"form-select\">\r\n                                                                <option>{item.size}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class=\"col-lg-2\">\r\n                                                            <label for=\"yourSecretKey\" className=\"form-label\">\r\n                                                                Price\r\n                                                            </label>\r\n                                                            <h5 class=\"card-text\">{item.price}</h5>\r\n                                                        </div>\r\n                                                        <div class=\"col-lg-3 mt-4\">\r\n                                                            <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                                                                <button type=\"button\" class=\"btn btn-outline-primary\" onClick={decrementQuantity}>-</button>\r\n                                                                {/* <input type=\"password\" name=\"password\" className=\"form-control\" id=\"yourPassword\" placeholder={item.quantity} required /> */}\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"quantity\"\r\n                                                                    className=\"form-control\"\r\n                                                                    id=\"yourQuantity\"\r\n                                                                    value={item.quantity}\r\n                                                                    readOnly\r\n                                                                />\r\n                                                                <button type=\"button\" class=\"btn btn-outline-primary\" onClick={incrementQuantity}>+</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-lg-2 \">\r\n\r\n                                                            <label for=\"yourSecretKey\" className=\"form-label\">Total Price</label>\r\n                                                            {/* <input type=\"text\" name=\"secretkey\" className=\"form-control\" id=\"yourSecretKey\" required /> */}\r\n                                                            <h5 class=\"card-text\">{item.totalPrice}</h5>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-check\">\r\n                                                        <h5 class=\"card-text\">Toppings</h5>\r\n                                                        {/* Render toppings checkboxes here */}\r\n                                                        <div class=\"row\">\r\n                                                            {/* <div class=\"col-lg-2\">\r\n                                                        <label class=\"form-check-label\" for=\"gridCheck1\">\r\n                                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n                                                            Cheese\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-2\">\r\n                                                        <label class=\"form-check-label\" for=\"gridCheck1\">\r\n                                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n                                                            Butter\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-2\">\r\n                                                        <label class=\"form-check-label\" for=\"gridCheck1\">\r\n                                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n                                                            Extra Butter\r\n                                                        </label>\r\n                                                    </div> */}\r\n                                                            {toppings.map((topping) => (\r\n                                                                <div className=\"col-lg-2\" key={`topping-${topping._id}`}>\r\n                                                                    {/* <div className=\"col-lg-2\" key={topping._id}> */}\r\n                                                                    <label className=\"form-check-label\" htmlFor={`topping-${topping._id}`}>\r\n                                                                        <input\r\n                                                                            className=\"form-check-input\"\r\n                                                                            type=\"checkbox\"\r\n                                                                            id={`topping-${topping._id}`}\r\n                                                                            value={topping.toppingName}\r\n                                                                        />\r\n                                                                        {topping.toppingName}\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            }\r\n                            <div>\r\n                                {/* <a class=\"btn btn-primary\" >Placed Order</a> */}\r\n                                <button class=\"btn btn-primary\" onClick={placeOrder}>Placed Order</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import './Cart.css'\r\n\r\n// const Cart = () => {\r\n\r\n//     const [cartItems, setCartItems] = useState([]);\r\n//     const [toppings, setToppings] = useState([]); // State to store fetched toppings\r\n//     const [userData, setUserData] = useState([]);\r\n\r\n//     const [quantity, setQuantity] = useState();\r\n\r\n//     const decrementQuantity = () => {\r\n//         if (quantity > 1) {\r\n//             setQuantity(quantity - 1);\r\n//         }\r\n//     };\r\n\r\n//     const incrementQuantity = () => {\r\n//         setQuantity(quantity + 1);\r\n//     };\r\n\r\n//     const callGetCart = async () => {\r\n//         try {\r\n//             const response = await fetch('/getcart', {\r\n//                 method: 'GET',\r\n//                 headers: {\r\n//                     Accept: 'application/json',\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 credentials: 'include',\r\n//             });\r\n\r\n//             const res = await response.json();\r\n//             console.log(res);\r\n\r\n//             if (!response.ok) {\r\n//                 const error = new Error(res.error);\r\n//                 throw error;\r\n//             }\r\n\r\n//             setCartItems(res.items);\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         callGetCart();\r\n//     }, []);\r\n\r\n//     const fetchToppings = async () => {\r\n//         try {\r\n//             const response = await fetch('/gettoppings'); // Change the URL to match your API route\r\n//             const data = await response.json();\r\n//             setToppings(data);\r\n//         } catch (err) {\r\n//             console.error(err);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         callGetCart();\r\n//         fetchToppings(); // Fetch toppings when the component mounts\r\n//     }, []);\r\n\r\n//     const callMenuPage = async () => {\r\n//         try {\r\n//             const response = await fetch(\"/getpizza\", {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     Accept: \"application/json\",\r\n//                     \"Content-Type\": \"application/json\"\r\n//                 },\r\n//                 credentials: \"include\"\r\n//             });\r\n\r\n//             const res = await response.json();\r\n//             console.log(res);\r\n//             setUserData(res);\r\n\r\n//             if (!response.ok) {\r\n//                 const error = new Error(res.error);\r\n//                 throw error;\r\n//             }\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//             //   navigate(\"/login\");\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         callMenuPage();\r\n//     }, []);\r\n\r\n//     const placeOrder = async () => {\r\n//         try {\r\n//             const response = await fetch('/order', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Accept': 'application/json',\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 credentials: 'include',\r\n//             });\r\n\r\n//             const data = await response.json();\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(data.error || 'Failed to place the order');\r\n//             }\r\n\r\n//             console.log('Order placed successfully:', data.message);\r\n//             window.alert('Order placed successfully');\r\n\r\n//         } catch (error) {\r\n//             console.error('Error placing order:', error.message);\r\n//             window.alert('Order not placed successfully');\r\n\r\n//         }\r\n//     };\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n\r\n//             <section class=\"section\" id=\"cart\">\r\n//                 <div className=\"section-header\">\r\n//                     <p>Your Cart</p>\r\n//                 </div>\r\n//                 <div class=\"container\">\r\n//                     {cartItems.length === 0 ? (\r\n//                         <div className=\"text-center\">\r\n//                             {/* <p>Your cart is empty.</p> */}\r\n//                             <p><span>Your cart is empty.</span></p>\r\n//                         </div>\r\n//                     ) : (\r\n//                         // ... Your existing code for rendering cart items ...\r\n//                         <div>\r\n\r\n//                             {\r\n//                                 cartItems.map((item) => (\r\n\r\n//                                     <div class=\"col-lg-9\" key={item._id} >\r\n//                                         <div class=\"card mb-3\">\r\n//                                             <div class=\"row g-0\">\r\n//                                                 <div class=\"col-md-4\">\r\n//                                                     <img\r\n//                                                         src=\"assets/img/italianpizza.jpg\"\r\n//                                                         class=\"img-fluid rounded-start\"\r\n//                                                         alt=\"...\"\r\n//                                                     />\r\n//                                                 </div>\r\n//                                                 <div class=\"col-md-8\">\r\n//                                                     <div class=\"card-body\">\r\n//                                                         <div class=\"row\">\r\n//                                                             <h5 class=\"card-title col-lg-4\">{item.itemName}</h5>\r\n\r\n//                                                             <p class=\"card-text col-lg-8 mt-3\">{item.description}</p>\r\n//                                                         </div>\r\n//                                                         <div class=\"row mb-3\">\r\n//                                                             <div class=\"col-lg-4\">\r\n//                                                                 <label for=\"inputState\" class=\"form-label\">\r\n//                                                                     Size\r\n//                                                                 </label>\r\n\r\n//                                                                 <select id=\"inputState\" class=\"form-select\">\r\n//                                                                     <option>{item.size}</option>\r\n//                                                                 </select>\r\n//                                                             </div>\r\n//                                                             <div class=\"col-lg-2\">\r\n//                                                                 <label for=\"yourSecretKey\" className=\"form-label\">\r\n//                                                                     Price\r\n//                                                                 </label>\r\n//                                                                 <h5 class=\"card-text\">{item.price}</h5>\r\n//                                                             </div>\r\n//                                                             <div class=\"col-lg-3 mt-4\">\r\n//                                                                 <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n//                                                                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={decrementQuantity}>-</button>\r\n//                                                                     {/* <input type=\"password\" name=\"password\" className=\"form-control\" id=\"yourPassword\" placeholder={item.quantity} required /> */}\r\n//                                                                     <input\r\n//                                                                         type=\"text\"\r\n//                                                                         name=\"quantity\"\r\n//                                                                         className=\"form-control\"\r\n//                                                                         id=\"yourQuantity\"\r\n//                                                                         value={item.quantity}\r\n//                                                                         readOnly\r\n//                                                                     />\r\n//                                                                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={incrementQuantity}>+</button>\r\n//                                                                 </div>\r\n//                                                             </div>\r\n//                                                             <div class=\"col-lg-2 \">\r\n\r\n//                                                                 <label for=\"yourSecretKey\" className=\"form-label\">Total Price</label>\r\n//                                                                 {/* <input type=\"text\" name=\"secretkey\" className=\"form-control\" id=\"yourSecretKey\" required /> */}\r\n//                                                                 <h5 class=\"card-text\">{item.totalPrice}</h5>\r\n//                                                             </div>\r\n//                                                         </div>\r\n//                                                         <div class=\"form-check\">\r\n//                                                             <h5 class=\"card-text\">Toppings</h5>\r\n//                                                             {/* Render toppings checkboxes here */}\r\n//                                                             <div class=\"row\">\r\n//                                                                 {/* <div class=\"col-lg-2\">\r\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\r\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n//                                                             Cheese\r\n//                                                         </label>\r\n//                                                     </div>\r\n//                                                     <div class=\"col-lg-2\">\r\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\r\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n//                                                             Butter\r\n//                                                         </label>\r\n//                                                     </div>\r\n//                                                     <div class=\"col-lg-2\">\r\n//                                                         <label class=\"form-check-label\" for=\"gridCheck1\">\r\n//                                                             <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\r\n//                                                             Extra Butter\r\n//                                                         </label>\r\n//                                                     </div> */}\r\n//                                                                 {toppings.map((topping) => (\r\n//                                                                     <div className=\"col-lg-2\" key={topping._id}>\r\n//                                                                         <label className=\"form-check-label\" htmlFor={`topping-${topping._id}`}>\r\n//                                                                             <input\r\n//                                                                                 className=\"form-check-input\"\r\n//                                                                                 type=\"checkbox\"\r\n//                                                                                 id={`topping-${topping._id}`}\r\n//                                                                                 value={topping.toppingName}\r\n//                                                                             />\r\n//                                                                             {topping.toppingName}\r\n//                                                                         </label>\r\n//                                                                     </div>\r\n//                                                                 ))}\r\n//                                                             </div>\r\n//                                                         </div>\r\n//                                                     </div>\r\n//                                                 </div>\r\n//                                             </div>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 ))\r\n//                             }\r\n//                             <div>\r\n//                                 {/* <a class=\"btn btn-primary\" >Placed Order</a> */}\r\n//                                 <a class=\"btn btn-primary\" onClick={placeOrder}>Placed Order</a>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     )}\r\n\r\n//                 </div>\r\n//             </section>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Cart\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}