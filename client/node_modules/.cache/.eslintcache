[{"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\index.js":"1","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\reportWebVitals.js":"2","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\App.js":"3","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Logout\\Logout.js":"4","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Sidebar\\Sidebar.js":"5","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Footer\\Footer.js":"6","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Contact\\Contact.js":"7","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\About\\About.js":"8","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Home\\Home.js":"9","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Login\\Login.js":"10","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Cart\\Cart.js":"11","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Addpizza\\Addpizza.js":"12","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Addtopping\\Addtopping.js":"13","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Menus.js":"14","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Menu.js":"15","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Navbar\\Navbar.js":"16","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Scroll\\ScrollToTop.js":"17","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Reducer\\Reducer.js":"18","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Signup\\Signup.js":"19","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Orderdetail\\Orderdetail.js":"20","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Orderrecord\\Orderrecord.js":"21","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Pizzacard.js":"22","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Home\\Homenew.js":"23","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Dashboard\\Dashboard.js":"24","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Yourorder\\Yourorder.js":"25"},{"size":621,"mtime":1695059145583,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1695058851859,"results":"28","hashOfConfig":"27"},{"size":2861,"mtime":1698492481102,"results":"29","hashOfConfig":"27"},{"size":940,"mtime":1692295648557,"results":"30","hashOfConfig":"27"},{"size":1852,"mtime":1696598537741,"results":"31","hashOfConfig":"27"},{"size":2623,"mtime":1696351420855,"results":"32","hashOfConfig":"27"},{"size":4947,"mtime":1692347703354,"results":"33","hashOfConfig":"27"},{"size":2406,"mtime":1696352906307,"results":"34","hashOfConfig":"27"},{"size":1128,"mtime":1694513309688,"results":"35","hashOfConfig":"27"},{"size":4439,"mtime":1696618547205,"results":"36","hashOfConfig":"27"},{"size":9146,"mtime":1698664074565,"results":"37","hashOfConfig":"27"},{"size":15734,"mtime":1696618336057,"results":"38","hashOfConfig":"27"},{"size":10734,"mtime":1697004024519,"results":"39","hashOfConfig":"27"},{"size":3297,"mtime":1698493105727,"results":"40","hashOfConfig":"27"},{"size":13159,"mtime":1696616152360,"results":"41","hashOfConfig":"27"},{"size":14643,"mtime":1697221801372,"results":"42","hashOfConfig":"27"},{"size":619,"mtime":1696618715098,"results":"43","hashOfConfig":"27"},{"size":260,"mtime":1695617611853,"results":"44","hashOfConfig":"27"},{"size":9308,"mtime":1696618744498,"results":"45","hashOfConfig":"27"},{"size":5995,"mtime":1698736380685,"results":"46","hashOfConfig":"27"},{"size":5845,"mtime":1698736190187,"results":"47","hashOfConfig":"27"},{"size":5188,"mtime":1696618599929,"results":"48","hashOfConfig":"27"},{"size":5548,"mtime":1696624568988,"results":"49","hashOfConfig":"27"},{"size":1064,"mtime":1698571009447,"results":"50","hashOfConfig":"27"},{"size":2993,"mtime":1698492895797,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"3utjur",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"55"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"55"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\index.js",[],[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\reportWebVitals.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\App.js",["137"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Logout\\Logout.js",["138","139","140","141"],[],"import React, { useEffect, useContext } from 'react'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from '../../App';\r\nconst Logout = () => {\r\n\r\n    const {state, dispatch} = useContext(UserContext);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        fetch('/logout', {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"appllication/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"include\"\r\n\r\n        }).then((res) => {\r\n            dispatch({ type: \"USER\", payload: false })\r\n            navigate('/Login', { replace: true });\r\n            if (res.status != 200) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\nreturn\r\n(\r\n    <>\r\n    </>\r\n)\r\n};\r\nexport default Logout;","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Sidebar\\Sidebar.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Footer\\Footer.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Contact\\Contact.js",["142","143"],[],"import React from 'react'\r\nimport './Contact.css'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <>\r\n            <section id=\"contact\" className=\"contact\">\r\n                <div className=\"container\" data-aos=\"fade-up\">\r\n\r\n                    <div className=\"section-header\">\r\n                        <h2>Contact</h2>\r\n                        <p>Need Help? <span>Contact Us</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <iframe style={{ \"border\": \"0\", \"width\": \"100%\", \"height\": \"350px\" }} src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d14738.989800343797!2d72.9544!3d22.5511314!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x395e4dbae57c57ff%3A0x2711db4fe9c17678!2sCHEESY%20PIZZA!5e0!3m2!1sen!2sin!4v1692296304629!5m2!1sen!2sin\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n                    </div>\r\n\r\n                    <div className=\"row gy-4\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"info-item  d-flex align-items-center\">\r\n                                <i className=\"icon bi bi-map flex-shrink-0\"></i>\r\n                                <div>\r\n                                    <h3>Our Address</h3>\r\n                                    <p>Maniya ni Khad,\r\n                                        behind Gopi Cinema Road,\r\n                                        near Balmandir,<br /> Vivekanand Wadi,\r\n                                        Anand, Gujarat 388001</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"info-item d-flex align-items-center\">\r\n                                <i className=\"icon bi bi-envelope flex-shrink-0\"></i>\r\n                                <div>\r\n                                    <h3>Email Us</h3>\r\n                                    <p>info@chessypizza.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"info-item  d-flex align-items-center\">\r\n                                <i className=\"icon bi bi-telephone flex-shrink-0\"></i>\r\n                                <div>\r\n                                    <h3>Call Us</h3>\r\n                                    <p> +91 77780 43066</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"info-item  d-flex align-items-center\">\r\n                                <i className=\"icon bi bi-share flex-shrink-0\"></i>\r\n                                <div>\r\n                                    <h3>Opening Hours</h3>\r\n                                    <div><strong>Mon-Sat:</strong> 11:00 AM - 11:00 PM <br />\r\n                                        <strong>Sunday:</strong> Closed\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <form method=\"post\" role=\"form\" className=\"php-email-form p-3 p-md-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 form-group\">\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\" placeholder=\"Your Name\" required />\r\n                            </div>\r\n                            <div className=\"col-xl-6 form-group\">\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Your Email\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"subject\" id=\"subject\" placeholder=\"Subject\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control\" name=\"message\" rows=\"5\" placeholder=\"Message\" required></textarea>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                            <div className=\"loading\">Loading</div>\r\n                            <div className=\"error-message\"></div>\r\n                            <div className=\"sent-message\">Your message has been sent. Thank you!</div>\r\n                        </div>\r\n                        <div className=\"text-center\"><button type=\"submit\">Send Message</button></div>\r\n                    </form>\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\About\\About.js",["144"],[],"import React from 'react'\r\nimport './About.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <section id=\"about\" className=\"about\">\r\n        <div className=\"container\" data-aos=\"fade-up\">\r\n\r\n          <div className=\"section-header\">\r\n            <h2>About Us</h2>\r\n            <p>Learn More <span>About Us</span></p>\r\n          </div>\r\n\r\n          <div className=\"contents row gy-4\">\r\n            <div className=\"col-lg-6 position-relative about-img\" style={{ \"background-image\": \"url(assets/img/cheesypizza.jpg)\" }} data-aos=\"fade-up\" data-aos-delay=\"150\">\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 d-flex\" data-aos=\"fade-up\" data-aos-delay=\"300\">\r\n              <div className=\"content ps-0 ps-lg-5\">\r\n                <p className=\"fst-italic\">\r\n                  Indulge in the Irresistible World of Cheesy Pizza! <br /><br />\r\n                  At Cheesy Pizza, we're not just another pizza joint; we're creators of edible art that's as rich in flavor as it is in passion. Our story begins with a slice of imagination and a dash of dedication, resulting in a culinary haven where cheese reigns supreme and every bite tells a tale.                </p>\r\n                <ul>\r\n                  <li><i className=\"bi bi-check2-all\"></i> We don't just create pizza; we curate moments. Each pizza is handcrafted with meticulous attention to detail, as if it were a work of art. Our chefs, armed with creativity and culinary prowess, transform the simplest of ingredients into flavor explosions that dance on your palate.</li>\r\n                  <li><i className=\"bi bi-check2-all\"></i>What makes Cheesy Pizza an experience to remember? It's the fusion of tradition and innovation. Our dough, perfected over time, boasts a harmony of crispiness and chewiness that provides the perfect foundation.</li>\r\n                  <li><i className=\"bi bi-check2-all\"></i>When you choose Cheesy Pizza, you're embracing more than a gastronomic delight; you're embracing a philosophy. Our promise to you is unwavering – to keep pushing the boundaries of flavor, to keep celebrating the cheesy goodness that brings joy, and to keep turning ordinary moments into extraordinary memories.</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </section>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Home\\Home.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Login\\Login.js",["145","146"],[],"import React, { useState, useContext } from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { UserContext } from '../../App';\r\nimport { toast } from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Login = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n  \r\n    const loginUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const res = await fetch('/login', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password\r\n        })\r\n      });\r\n  \r\n      const data = await res.json();\r\n  \r\n      if (res.status === 400 || !data) {\r\n        toast.error(\"Invalid Login\"); \r\n      } else if (res.status === 200) {\r\n        dispatch({ type: \"ADMIN\", payload: true });\r\n        toast.success(\"Admin Successfully Logged In\"); \r\n        navigate(\"/Dashboard\");\r\n      } else {\r\n        dispatch({ type: \"USER\", payload: true });\r\n        toast.success(\"User Successfully Logged In\"); \r\n        navigate(\"/Home\");\r\n      }\r\n  \r\n    }\r\n    return (\r\n        <>\r\n            <section className=\"section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center\">\r\n\r\n                            <div className=\"d-flex justify-content-center py-4\">\r\n                                <a href=\"index.html\" className=\"logo d-flex align-items-center w-auto\">\r\n                                    <img src=\"assets/img/logo.png\" alt=\"\" />\r\n                                    <span className=\"d-none d-lg-block\">Cheesy Pizza</span>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"card mb-3\">\r\n\r\n                                <div className=\"card-body\">\r\n\r\n                                    <div className=\"pt-4 pb-2\">\r\n                                        <h5 className=\"card-title text-center pb-0 fs-4\">Login to Your Account</h5>\r\n                                        <p className=\"text-center small\">Enter your email-id & password to login</p>\r\n                                    </div>\r\n\r\n                                    <form className=\"row g-3\" >\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Email-Id</label>\r\n                                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"yourUsername\" required \r\n                                                 value={email} onChange={(e) => setEmail(e.target.value)} \r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourPassword\" className=\"form-label\">Password</label>\r\n                                            <input type=\"password\" name=\"password\" className=\"form-control\" id=\"yourPassword\" required \r\n                                                 value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <button className=\"btn btn-primary w-100\" type=\"submit\" onClick={loginUser}>Login</button>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <p className=\"small mb-0\">Don't have account? <a href=\"/Signup\">Create an account</a></p>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Cart\\Cart.js",["147","148"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Addpizza\\Addpizza.js",["149","150","151"],[],"import React, { useState, useEffect } from 'react'\r\nimport { DataTable } from 'simple-datatables';\r\nimport './Addpizza.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst Addpizza = () => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [items, setItems] = useState([]);\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n    const [itemIdToUpdate, setItemIdToUpdate] = useState('');\r\n    const [item, setItem] = useState({\r\n        itemName: \"\",\r\n        description: \"\",\r\n        sizes: {\r\n            small: { price: \"\" },\r\n            medium: { price: \"\" },\r\n            large: { price: \"\" }\r\n        },\r\n        image: \"\"\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        fetch(\"/getItems\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setItems(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching items:\", error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const handleInputs = (e) => {\r\n        const { name, value } = e.target;\r\n        setItem({ ...item, [name]: value });\r\n    };\r\n\r\n    const handlePriceInputs = (e, size) => {\r\n        const { name, value } = e.target;\r\n        setItem({\r\n            ...item,\r\n            sizes: {\r\n                ...item.sizes,\r\n                [size]: {\r\n                    ...item.sizes[size],\r\n                    [name]: value\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleUpdate = (item) => {\r\n        setUpdateMode(true);\r\n        setItemIdToUpdate(item._id);\r\n        setItem({\r\n            itemName: item.itemName,\r\n            description: item.description,\r\n            sizes: {\r\n                small: { price: item.sizes.small.price },\r\n                medium: { price: item.sizes.medium.price },\r\n                large: { price: item.sizes.large.price },\r\n            },\r\n            image: item.image,\r\n        });\r\n    };\r\n\r\n    const handleCancelUpdate = () => {\r\n        setUpdateMode(false);\r\n        setItemIdToUpdate('');\r\n        setItem({\r\n            itemName: '',\r\n            description: '',\r\n            sizes: {\r\n                small: { price: '' },\r\n                medium: { price: '' },\r\n                large: { price: '' },\r\n            },\r\n            image: '',\r\n        });\r\n    };\r\n\r\n    const handleUpdateItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { itemName, description, sizes, image } = item;\r\n\r\n        const updatePayload = {\r\n            itemName,\r\n            description,\r\n            sizes,\r\n            image,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`/updateItems/${itemIdToUpdate}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify(updatePayload),\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log('Item updated successfully');\r\n                toast.success('Item updated successfully');\r\n\r\n                const updatedItem = await response.json();\r\n\r\n                setItems((prevItems) =>\r\n                    prevItems.map((prevItem) =>\r\n                        prevItem._id === updatedItem._id ? updatedItem : prevItem\r\n                    )\r\n                );\r\n\r\n                setUpdateMode(false);\r\n                setItemIdToUpdate('');\r\n                setItem({\r\n                    itemName: '',\r\n                    description: '',\r\n                    sizes: {\r\n                        small: { price: '' },\r\n                        medium: { price: '' },\r\n                        large: { price: '' },\r\n                    },\r\n                    image: '',\r\n                });\r\n            } else if (response.status === 404) {\r\n                console.log('item not found');\r\n                toast.error('item not found');\r\n\r\n            }\r\n            else if (response.status === 500) {\r\n                console.log('internal server error');\r\n                toast.error('internal server error');\r\n\r\n            } else {\r\n                console.log('Failed to update item');\r\n                toast.error('Failed to update item');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating item:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (itemId) => {\r\n        try {\r\n            const response = await fetch(`/deleteItems/${itemId}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log(\"Item deleted successfully\");\r\n                toast.success(\"Item deleted successfully\");\r\n\r\n                setItems((prevItems) => prevItems.filter((item) => item._id !== itemId));\r\n            } else {\r\n                console.log(\"Failed to delete item\");\r\n                toast.error(\"Failed to delete item\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting item:\", error);\r\n        }\r\n    };\r\n\r\n    const convertToBase64 = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setItem({ ...item, image: reader.result });\r\n        };\r\n        reader.onerror = (error) => {\r\n            console.log(\"Error: \", error);\r\n        };\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    };\r\n\r\n    const postData = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { itemName, description, sizes, image } = item;\r\n\r\n        const response = await fetch(\"/addItem\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                itemName,\r\n                description,\r\n                sizes,\r\n                image\r\n            }),\r\n        });\r\n\r\n        const res = await response.json();\r\n\r\n        if (response.status === 201 || res.message === 'Item added successfully') {\r\n            console.log(\"Item added successfully\");\r\n            toast.success(\"Item added successfully\");\r\n\r\n            setItem({\r\n                itemName: \"\",\r\n                description: \"\",\r\n                sizes: {\r\n                    small: { price: \"\" },\r\n                    medium: { price: \"\" },\r\n                    large: { price: \"\" }\r\n                },\r\n                image: \"\"\r\n            });\r\n        } else {\r\n            console.log(\"Failed to add item\");\r\n            toast.error(\"Failed to add item\");\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const datatables = document.querySelectorAll('.datatable');\r\n\r\n        datatables.forEach(datatable => {\r\n            new DataTable(datatable);\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <section className=\"section register min-vh-100 d-flex flex-column align-items-center  py-4\" id=\"register\" >\r\n                <div className=\"container\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-lg-4 col-md-6 d-flex flex-column align-items-center \">\r\n\r\n\r\n\r\n                            <div className=\"card mb-3\">\r\n\r\n                                <div className=\"card-body\">\r\n\r\n                                    <div className=\"pt-4 pb-2\">\r\n                                        <h5 className=\"card-title text-center pb-0 fs-4\">{updateMode ? 'Update Pizza' : 'Add Pizza'}</h5>\r\n                                        <p className=\"text-center small\">Add Pizza from Admin Side</p>\r\n                                    </div>\r\n\r\n                                    <form className=\"row g-3\" >\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Pizza Name</label>\r\n                                            <input type=\"text\" name=\"itemName\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={item.itemName} onChange={handleInputs} />\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Pizza Description</label>\r\n                                            <input type=\"text\" name=\"description\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={item.description} onChange={handleInputs}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Small Size Price</label>\r\n                                            <input type=\"text\" name=\"price\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={item.sizes.small.price}\r\n                                                onChange={(e) => handlePriceInputs(e, \"small\")}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Medium Size Price</label>\r\n                                            <input type=\"text\" name=\"price\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={item.sizes.medium.price}\r\n                                                onChange={(e) => handlePriceInputs(e, \"medium\")} />\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Large Size Price</label>\r\n                                            <input type=\"text\" name=\"price\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={item.sizes.large.price}\r\n                                                onChange={(e) => handlePriceInputs(e, \"large\")}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label for=\"inputNumber\" class=\"form-label\">File Upload</label>\r\n                                            <input class=\"form-control\" type=\"file\" id=\"formFile\" accept=\"image/*\" onChange={convertToBase64} />\r\n                                            {item.image && <img width={100} height={100} src={item.image} alt=\"Preview\" />}\r\n                                        </div>\r\n\r\n\r\n\r\n                                        {updateMode ? (\r\n                                            <>\r\n\r\n                                                <div className=\"col-6\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={handleCancelUpdate}>Cancel Update</button>\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={handleUpdateItem}>Update Item</button>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n\r\n\r\n                                                <div className=\"col-12\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={postData}>Add Pizza</button>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-8\">\r\n\r\n                            <div class=\"card justify-content-center\">\r\n                                <div class=\"card-body\">\r\n\r\n\r\n                                    <h5 class=\"card-title\">Records of Pizzaa</h5>\r\n                                    <div className=\"table-responsive\">\r\n\r\n                                        <table class=\"table table-bordered table-sm datatable \">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Sr No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Description</th>\r\n                                                    <th scope=\"col\">Small Price</th>\r\n                                                    <th scope=\"col\">Medium Price</th>\r\n                                                    <th scope=\"col\">Large Price</th>\r\n                                                    <th scope=\"col\">Update</th>\r\n                                                    <th scope=\"col\">Delete</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {items.map((item, index) => (\r\n                                                    <tr key={item._id}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{item.itemName}</td>\r\n                                                        <td>{item.description}</td>\r\n                                                        <td>Rs.{item.sizes.small.price}</td>\r\n                                                        <td>Rs.{item.sizes.medium.price}</td>\r\n                                                        <td>Rs.{item.sizes.large.price}</td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => handleUpdate(item)}>Update</button>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => handleDelete(item._id)}>Delete</button>\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Addpizza\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Addtopping\\Addtopping.js",["152","153","154"],[],"import React, { useState, useContext, useEffect } from 'react'\r\nimport './Addtopping.css'\r\nimport { DataTable } from 'simple-datatables';\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst Addtopping = () => {\r\n    const navigate = useNavigate();\r\n    const [toppingName, setToppingName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [items, setItems] = useState([]);\r\n\r\n\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n    const [itemIdToUpdate, setItemIdToUpdate] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"/getItemsss\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setItems(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching items:\", error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const handleDelete = async (itemId) => {\r\n        try {\r\n            const response = await fetch(`/deleteTopping/${itemId}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log(\"Item deleted successfully\");\r\n                toast.success(\"Item deleted successfully\");\r\n\r\n                setItems((prevItems) => prevItems.filter((item) => item._id !== itemId));\r\n            } else {\r\n                console.log(\"Failed to delete item\");\r\n                toast.error(\"Failed to delete item\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting item:\", error);\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (item) => {\r\n        setToppingName(item.toppingName);\r\n        setPrice(item.price);\r\n\r\n        setUpdateMode(true);\r\n        setItemIdToUpdate(item._id);\r\n    };\r\n\r\n    const handleCancelUpdate = () => {\r\n        setToppingName('');\r\n        setPrice('');\r\n        setUpdateMode(false);\r\n        setItemIdToUpdate(null);\r\n    };\r\n\r\n    const handleUpdateItem = async () => {\r\n        const updatePayload = {\r\n            toppingName,\r\n            price,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`/updateToppings/${itemIdToUpdate}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify(updatePayload),\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log('Item updated successfully');\r\n                toast.success('Item updated successfully');\r\n\r\n                const updatedItem = await response.json();\r\n\r\n                setItems((prevItems) =>\r\n                    prevItems.map((prevItem) =>\r\n                        prevItem._id === updatedItem._id ? updatedItem : prevItem\r\n                    )\r\n                );\r\n\r\n                setUpdateMode(false);\r\n                setItemIdToUpdate(null);\r\n                setToppingName('');\r\n                setPrice('');\r\n            } else if (response.status === 404) {\r\n                console.log('Topping not found');\r\n                toast.error('Topping not found');\r\n            } else if (response.status === 500) {\r\n                console.log('Internal server error');\r\n                toast.error('Internal server error');\r\n            } else {\r\n                console.log('Failed to update item');\r\n                toast.error('Failed to update item');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating item:', error);\r\n        }\r\n    };\r\n\r\n    const submitAdmin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const res = await fetch('/addTopping', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                toppingName,\r\n                price\r\n\r\n            }),\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if (res.status === 400 || !data) {\r\n            toast.error(\"Invalid Item\");\r\n            console.log(\"Invalid Item\");\r\n        } else if (res.status === 200) {\r\n\r\n            toast.success(\"Successfully Topping added\");\r\n            //   navigate(\"/Dashboard\");\r\n        }\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        const datatables = document.querySelectorAll('.datatable');\r\n\r\n        datatables.forEach(datatable => {\r\n            new DataTable(datatable);\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <section className=\"section register min-vh-100 d-flex flex-column align-items-center  py-4\" id=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-lg-4 col-md-6 d-flex flex-column align-items-center \">\r\n\r\n\r\n\r\n                            <div className=\"card mb-3\">\r\n\r\n                                <div className=\"card-body\">\r\n\r\n                                    <div className=\"pt-4 pb-2\">\r\n                                        <h5 className=\"card-title text-center pb-0 fs-4\">{updateMode ? 'Update Topping' : 'Topping Add'}</h5>\r\n                                        <p className=\"text-center small\">Add Topping from Admin Side</p>\r\n                                    </div>\r\n\r\n                                    <form className=\"row g-3 needs-validation\" >\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Topping Name</label>\r\n                                            <input type=\"text\" name=\"toppingName\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={toppingName}\r\n                                                onChange={(e) => setToppingName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourUsername\" className=\"form-label\">Toping Price</label>\r\n                                            <input type=\"text\" name=\"price\" className=\"form-control\" id=\"yourUsername\" required\r\n                                                value={price}\r\n                                                onChange={(e) => setPrice(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        {updateMode ? (\r\n                                            <>\r\n\r\n                                                <div className=\"col-6\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={handleCancelUpdate}> Cancel Update</button>\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={handleUpdateItem}> Update Topping</button>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n\r\n\r\n                                                <div className=\"col-12\">\r\n                                                    <button className=\"btn btn-primary w-100\" type=\"button\" onClick={submitAdmin}>Add Topping</button>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-8 \">\r\n\r\n                            <div class=\"card justify-content-center\">\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title col-lg-12\">Records of Toppings</h5>\r\n                                    <div className=\"table-responsive\">\r\n\r\n                                        <table class=\"table table-bordered datatable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Sr No.</th>\r\n                                                    <th scope=\"col\">Name</th>\r\n                                                    <th scope=\"col\">Price</th>\r\n                                                    <th scope=\"col\">Update</th>\r\n                                                    <th scope=\"col\">Delete</th>\r\n\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {items.map((item, index) => (\r\n                                                    <tr key={item._id}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{item.toppingName}</td>\r\n                                                        <td>{item.price}</td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => handleUpdate(item)}>Update</button>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-primary w-100\" type=\"button\" onClick={() => handleDelete(item._id)}>Delete</button>\r\n\r\n                                                        </td>\r\n\r\n                                                    </tr>\r\n                                                ))}\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Addtopping\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Menus.js",["155","156","157","158"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Menu.js",["159","160","161","162","163","164","165","166","167","168"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Navbar\\Navbar.js",["169","170","171"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Scroll\\ScrollToTop.js",["172"],[],"import { useEffect } from 'react';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\n\r\nfunction ScrollToTop() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      const onRouteChange = () => {\r\n        window.scrollTo(0, 0);\r\n      };\r\n  \r\n      // Scroll to the top on route change\r\n      onRouteChange();\r\n  \r\n      // Clean up the scroll effect when the component unmounts\r\n      return () => {\r\n        window.removeEventListener('scroll', onRouteChange);\r\n      };\r\n    }, [location]);\r\n  \r\n    return null;\r\n  }\r\n\r\nexport default ScrollToTop;\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Reducer\\Reducer.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Signup\\Signup.js",["173"],[],"import React, { useState } from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Signup = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [cpassword, setCpassword] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [shopID, setShopID] = useState('');\r\n    const [secretKey, setSecretkey] = useState('');\r\n\r\n    const PostData = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const requestBody = {\r\n            name, email, phone, password, cpassword, type\r\n        };\r\n\r\n        if (type === \"admin\") {\r\n            requestBody.shopID = shopID;\r\n            requestBody.secretKey = secretKey;\r\n        }\r\n\r\n\r\n        const response = await fetch(\"/sign\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n\r\n        });\r\n\r\n        const res = await response.json();\r\n        console.log(response.status);\r\n\r\n        if (response.status === 422 || !res) {\r\n            toast.error(\"Invalid registration\");\r\n            console.log(\"Invalid registration\");\r\n        } else {\r\n            toast.success(\"Registration Successfull\");\r\n            console.log(\"Successfull Registration\");\r\n\r\n            navigate(\"/Login\");\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section className=\"section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-6 col-md-6 d-flex flex-column align-items-center justify-content-center\">\r\n\r\n                            <div className=\"d-flex justify-content-center py-4\">\r\n                                <a href=\"s\" className=\"logo d-flex align-items-center w-auto\">\r\n                                    <img src=\"assets/img/logo.png\" alt=\"\" />\r\n                                    <span className=\"d-none d-lg-block\">Cheesy Pizza</span>\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"card mb-3\">\r\n\r\n                                <div className=\"card-body\">\r\n\r\n                                    <div className=\"pt-4 pb-2\">\r\n                                        <h5 className=\"card-title text-center pb-0 fs-4\">Create an Account</h5>\r\n                                        <p className=\"text-center small\">Enter your personal details to create account</p>\r\n                                    </div>\r\n\r\n                                    <form className=\"row g-3 \" method=\"POST\" >\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"yourName\" className=\"form-label\">Your Name</label>\r\n                                            <input type=\"text\" name=\"name\" className=\"form-control\" id=\"yourName\" required\r\n                                                value={name} onChange={(e) => setName(e.target.value)} />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"yourEmail\" className=\"form-label\">Your Email</label>\r\n                                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"yourEmail\" required\r\n                                                value={email} onChange={(e) => setEmail(e.target.value)}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"yourEmail\" className=\"form-label\">Your Contact</label>\r\n                                            <input type=\"text\" name=\"number\" className=\"form-control\" id=\"yourContact\" required\r\n                                                value={phone} onChange={(e) => setPhone(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"yourPassword\" className=\"form-label\">Password</label>\r\n                                            <input type=\"password\" name=\"password\" className=\"form-control\" id=\"yourPassword\" required\r\n                                                value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"yourPassword\" className=\"form-label\">Confirm Password</label>\r\n                                            <input type=\"password\" name=\"cpassword\" className=\"form-control\" id=\"yourPassword\" required\r\n                                                value={cpassword} onChange={(e) => setCpassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <label for=\"userType\" className=\"form-label\">User Type</label>\r\n                                            <div className=\"row\">\r\n\r\n                                                <div class=\"form-check col-lg-6\">\r\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"user\"\r\n                                                        value=\"user\" onChange={(e) => setType(e.target.value)} />\r\n                                                    <label class=\"form-check-label\" for=\"userType\">\r\n                                                        Customer\r\n                                                    </label>\r\n\r\n                                                </div>\r\n                                                <div class=\"form-check col-lg-6\">\r\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"admin\"\r\n                                                        value=\"admin\" onChange={(e) => setType(e.target.value)} />\r\n                                                    <label class=\"form-check-label\" for=\"userType\">\r\n                                                        Admin\r\n                                                    </label>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {type === \"admin\" ? (\r\n                                            <>\r\n                                                <div className=\"col-6\">\r\n                                                    <label for=\"yourSecretKey\" className=\"form-label\">Secret Key</label>\r\n                                                    <input type=\"text\" name=\"secretkey\" className=\"form-control\" id=\"yourSecretKey\" required\r\n                                                        value={secretKey}\r\n                                                        onChange={(e) => setSecretkey(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n\r\n                                                    <label for=\"yourSecretKey\" className=\"form-label\">Shop ID</label>\r\n                                                    <input type=\"text\" name=\"secretkey\" className=\"form-control\" id=\"yourSecretKey\" required\r\n                                                        value={shopID}\r\n                                                        onChange={(e) => setShopID(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                            </>\r\n                                        ) : null}\r\n\r\n\r\n\r\n                                        <div className=\"col-12\">\r\n                                            <button className=\"btn btn-primary w-100\" type=\"submit\" onClick={PostData}>Create Account</button>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <p className=\"small mb-0\">Already have an account? <a href=\"/Login\">Log in</a></p>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Orderdetail\\Orderdetail.js",["174"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Orderrecord\\Orderrecord.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Menu\\Pizzacard.js",["175"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst PizzaCard = ({ pizza }) => {\r\n    const navigate = useNavigate();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [selectedSize, setSelectedSize] = useState('small');\r\n\r\n\r\n\r\n    const decrementQuantity = () => {\r\n        if (quantity > 1) {\r\n            setQuantity(quantity - 1);\r\n        }\r\n    };\r\n\r\n    const incrementQuantity = () => {\r\n        setQuantity(quantity + 1);\r\n    };\r\n\r\n    const addToCart = async () => {\r\n        const data = {\r\n            itemName: pizza.itemName,\r\n            size: selectedSize,  \r\n            quantity: quantity\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n\r\n            const res = await response.json();\r\n            console.log(response.status);\r\n\r\n            if (response.status === 500 || !res) {\r\n                toast.error(\"Failed to add Item to cart\");\r\n                console.log(\"Failed to add  Item to cart\");\r\n            }\r\n            else if (response.status === 400) {\r\n                toast.error(\"Invalid size selected\");\r\n                console.log(\"Invalid size selected\");\r\n            }\r\n            else if (response.status === 401) {\r\n                toast.error(\"Please Login\");\r\n                console.log(\"Please Login\");\r\n                navigate(\"/login\");\r\n            }\r\n            else if (response.status === 404) {\r\n                toast.error(\"Menu item not found\");\r\n                console.log(\"Menu item not found\");\r\n            }\r\n            else if (response.status === 201) {\r\n                toast.success(\"Item added to cart successfully\");\r\n                console.log(\"Item added to cart successfully\");\r\n            }\r\n            else {\r\n                toast.error(\"Internal Error\");\r\n                console.log(\"Internal Error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-lg-3\" key={pizza.id}>\r\n            <div className=\"card\">\r\n                <img src={pizza.image} className=\"card-img-top\" alt={pizza.name} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{pizza.itemName}</h5>\r\n                    <p className=\"card-text\">{pizza.description}</p>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-lg-6\">\r\n                            <label htmlFor=\"inputSize\" className=\"form-label\">Size</label>\r\n\r\n                            <select\r\n                                id=\"inputSize\"\r\n                                className=\"form-select\"\r\n                                value={selectedSize}\r\n                                onChange={(e) => {\r\n                                    setSelectedSize(e.target.value);\r\n                                }}\r\n                            >\r\n                                {Object.keys(pizza.sizes).map((size) => (\r\n                                    <option key={size} value={size}>\r\n                                        {size}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <label htmlFor=\"yourPrice\" className=\"form-label\">Price</label>\r\n                            <h5 className=\"card-text\">{pizza.sizes[selectedSize].price}</h5>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={decrementQuantity}>-</button>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"quantity\"\r\n                                    className=\"form-control\"\r\n                                    id=\"yourQuantity\"\r\n                                    value={quantity}\r\n                                    readOnly\r\n                                />\r\n                                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={incrementQuantity}>+</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"btn btn-primary\" onClick={addToCart}>\r\n                                Add to Cart\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PizzaCard;\r\n","H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Home\\Homenew.js",[],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Dashboard\\Dashboard.js",["176"],[],"H:\\BVM\\7th SEM Subject\\4CP31\\New\\client\\src\\Components\\Yourorder\\Yourorder.js",[],[],{"ruleId":"177","severity":1,"message":"178","line":29,"column":8,"nodeType":"179","messageId":"180","endLine":29,"endColumn":15},{"ruleId":"177","severity":1,"message":"181","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":18},{"ruleId":"177","severity":1,"message":"182","line":6,"column":12,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":20,"column":28,"nodeType":"185","messageId":"186","endLine":20,"endColumn":30},{"ruleId":"187","severity":1,"message":"188","line":29,"column":1,"nodeType":"189","messageId":"190","endLine":32,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":16,"column":25,"nodeType":"193","endLine":16,"endColumn":413},{"ruleId":"194","severity":1,"message":"195","line":68,"column":21,"nodeType":"193","endLine":68,"endColumn":91},{"ruleId":"177","severity":1,"message":"196","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":17},{"ruleId":"177","severity":1,"message":"196","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"182","line":7,"column":13,"nodeType":"179","messageId":"180","endLine":7,"endColumn":18},{"ruleId":"177","severity":1,"message":"197","line":11,"column":12,"nodeType":"179","messageId":"180","endLine":11,"endColumn":20},{"ruleId":"177","severity":1,"message":"198","line":12,"column":12,"nodeType":"179","messageId":"180","endLine":12,"endColumn":20},{"ruleId":"177","severity":1,"message":"199","line":11,"column":12,"nodeType":"179","messageId":"180","endLine":11,"endColumn":23},{"ruleId":"177","severity":1,"message":"200","line":11,"column":25,"nodeType":"179","messageId":"180","endLine":11,"endColumn":39},{"ruleId":"177","severity":1,"message":"201","line":26,"column":11,"nodeType":"179","messageId":"180","endLine":26,"endColumn":19},{"ruleId":"177","severity":1,"message":"202","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"177","severity":1,"message":"196","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"177","severity":1,"message":"201","line":10,"column":11,"nodeType":"179","messageId":"180","endLine":10,"endColumn":19},{"ruleId":"177","severity":1,"message":"201","line":7,"column":11,"nodeType":"179","messageId":"180","endLine":7,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":55,"column":29,"nodeType":"193","endLine":55,"endColumn":116},{"ruleId":"203","severity":1,"message":"204","line":62,"column":29,"nodeType":"193","endLine":62,"endColumn":108},{"ruleId":"203","severity":1,"message":"204","line":69,"column":29,"nodeType":"193","endLine":69,"endColumn":105},{"ruleId":"177","severity":1,"message":"205","line":14,"column":12,"nodeType":"179","messageId":"180","endLine":14,"endColumn":21},{"ruleId":"177","severity":1,"message":"206","line":14,"column":23,"nodeType":"179","messageId":"180","endLine":14,"endColumn":35},{"ruleId":"177","severity":1,"message":"207","line":15,"column":12,"nodeType":"179","messageId":"180","endLine":15,"endColumn":24},{"ruleId":"177","severity":1,"message":"208","line":15,"column":26,"nodeType":"179","messageId":"180","endLine":15,"endColumn":41},{"ruleId":"177","severity":1,"message":"209","line":21,"column":11,"nodeType":"179","messageId":"180","endLine":21,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":136,"column":29,"nodeType":"193","endLine":136,"endColumn":116},{"ruleId":"203","severity":1,"message":"204","line":143,"column":29,"nodeType":"193","endLine":143,"endColumn":108},{"ruleId":"203","severity":1,"message":"204","line":150,"column":29,"nodeType":"193","endLine":150,"endColumn":105},{"ruleId":"203","severity":1,"message":"210","line":202,"column":53,"nodeType":"193","endLine":202,"endColumn":89},{"ruleId":"203","severity":1,"message":"210","line":263,"column":57,"nodeType":"193","endLine":263,"endColumn":97},{"ruleId":"177","severity":1,"message":"211","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"212","line":45,"column":20,"nodeType":"179","messageId":"180","endLine":45,"endColumn":28},{"ruleId":"177","severity":1,"message":"213","line":78,"column":15,"nodeType":"179","messageId":"180","endLine":78,"endColumn":26},{"ruleId":"177","severity":1,"message":"201","line":5,"column":11,"nodeType":"179","messageId":"180","endLine":5,"endColumn":19},{"ruleId":"177","severity":1,"message":"196","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"214","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":15},{"ruleId":"177","severity":1,"message":"215","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"181","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":18},"no-unused-vars","'Homenew' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'state' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'NavLink' is defined but never used.","'toppings' is assigned a value but never used.","'userData' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'menuItems' is assigned a value but never used.","'setMenuItems' is assigned a value but never used.","'selectedSize' is assigned a value but never used.","'setSelectedSize' is assigned a value but never used.","'addToCart' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'tooltipList' is assigned a value but never used.","'toast' is defined but never used.","'useEffect' is defined but never used."]